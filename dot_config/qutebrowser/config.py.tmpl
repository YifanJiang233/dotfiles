import os
from urllib.request import urlopen


# pylint: disable=C0111
from qutebrowser.config.configfiles import ConfigAPI  # noqa: F401
from qutebrowser.config.config import ConfigContainer  # noqa: F401

config: ConfigAPI = config  # noqa: F821 pylint: disable=E0602,C0103
c: ConfigContainer = c  # noqa: F821 pylint: disable=E0602,C0103

config.load_autoconfig(False)

# set the flavor you'd like to use
# valid options are 'mocha', 'macchiato', 'frappe', and 'latte'
# last argument (optional, default is False): enable the plain look for the menu rows

if not os.path.exists(config.configdir / "theme.py"):
    theme = "https://raw.githubusercontent.com/catppuccin/qutebrowser/main/setup.py"
    with urlopen(theme) as themehtml:
        with open(config.configdir / "theme.py", "a") as file:
            file.writelines(themehtml.read().decode("utf-8"))

if os.path.exists(config.configdir / "theme.py"):
    import theme
    theme.setup(c, 'mocha', True)
# hide the title bar
c.window.hide_decoration = True

# key bindings

c.bindings.commands = {
    "normal": {
        "e": "config-cycle statusbar.show always never;; config-cycle tabs.show always never",
        "x": "tab-close",
        "X": "undo",
        "J": "tab-next",
        "K": "tab-prev",
        "d": "cmd-run-with-count 10 scroll down",
        "u": "cmd-run-with-count 10 scroll up",
        "j": "cmd-run-with-count 3 scroll down",
        "k": "cmd-run-with-count 3 scroll up",
        "p": "open -- {clipboard}",
        "P": "open -t -- {clipboard}",
        "gj": "tab-move -",
        "gk": "tab-move +",
        ";p": "spawn --userscript bw",
        ";w": "spawn --userscript bw --password-only",
        ";u": "spawn --userscript bw --username-only",
        ";v": "config-cycle content.proxy system socks://127.0.0.1:1080",
        "cs": "config-source"
    },
    "insert": {
        "<Ctrl-i>": "edit-text",
        "<Ctrl-f>": "fake-key <Right>",
        "<Ctrl-b>": "fake-key <Left>",
        "<Ctrl-a>": "fake-key <Home>",
        "<Ctrl-e>": "fake-key <End>",
        "<Ctrl-n>": "fake-key <Down>",
        "<Ctrl-p>": "fake-key <Up>",
        "<Ctrl-d>": "fake-key <Delete>",
        "<Ctrl-y>": "insert-text {primary}",
        "<Ctrl-w>": "fake-key <Ctrl-backspace>",
        "<Ctrl-k>": "fake-key <Shift-End> ;; fake-key <Delete>",
        "<Esc>": "mode-leave ;; jseval -q document.activeElement.blur()",
    },
}

# search engines
c.url.searchengines = {
    "DEFAULT": "https://google.com/search?q={}",
    "google": "https://google.com/search?q={}",
    "github": "https://github.com/search?q={}",
    "scholar": "https://scholar.google.com/scholar?q={}",
    "arxiv": "https://arxiv.org/search/?query={}&searchtype=all",
    "arch": "https://wiki.archlinux.org/?search={}"
}

# set tab styles
c.tabs.position = "left"
c.tabs.padding = {"bottom": 4, "left": 4, "right": 4, "top": 4}
c.tabs.last_close = "close"


# set tab indicator color
c.colors.tabs.indicator.error = "#f38ba8"
c.colors.tabs.indicator.start = "#89b4fa"
c.colors.tabs.indicator.stop = "#a6e3a1"


# set hint styles
c.hints.border = "1px outset #6c7086"
c.hints.padding = {"bottom": 2, "left": 4, "right": 4, "top": 2}
c.hints.radius = 5
c.hints.uppercase = True
# c.colors.hints.bg = "#585b70"
# c.colors.hints.fg = "#cdd6f4"
# c.colors.hints.match.fg = "#cba6f7"
c.colors.hints.bg = "#181825"
c.colors.hints.fg = "#f9e2af"
c.colors.hints.match.fg = "#f38ba8"
c.fonts.hints = "bold 18px JetBrains Mono"

# set global font
c.fonts.default_size = "18px"
c.fonts.default_family = "JetBrains Mono"
c.fonts.tabs.selected =  "Bold 20px LXGW Bright"
c.fonts.tabs.unselected =  "20px LXGW Bright"


# enable smooth scolling
c.scrolling.smooth = True

# enable pdfjs
c.content.pdfjs = True

# auto save session
c.auto_save.session = True

{{ if eq .chezmoi.os "darwin"}}
# MacOS specific configurations

# Hint links and open the selected link's URL in IINA
c.bindings.commands["normal"][";v"] = "hint links spawn open -a IINA {hint-url}"
c.bindings.commands["normal"][";V"] = "spawn open -a IINA {url}"

# set external editor
c.editor.command = [
    "/Applications/WezTerm.app/Contents/MacOS/wezterm-gui",
    "start",
    "--always-new-process",
    "--",
    "/opt/homebrew/bin/nvim",
    "-f",
    "{file}",
    "-c",
    "normal {line}G{column0}l",
]
{{ end }}

{{ if eq .chezmoi.os "linux"}}
# Linux specific configurations
c.zoom.default = 125
c.editor.command = [
    "wezterm",
    "start",
    "--always-new-process",
    "--class",
    "floating_wezterm",
    "--",
    "/usr/bin/nvim",
    "-f",
    "{file}",
    "-c",
    "normal {line}G{column0}l",
]
{{ end }}
