# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# Feel free to omit keys that you don't use in your config.
# If the key is absent in your config the default value is taken from this config

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands.html
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands.html
# after-startup-command = ['exec-and-forget /opt/homebrew/Cellar/borders/1.4.1/bin/borders active_color=0xff8aadf4 inactive_color=0x90494d64 width=4.0 order=above hidpi=on', 
# 'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar']

# after-startup-command = ['exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color=0xff8aadf4 inactive_color=0x90494d64 width=4.0 order=above hidpi=on']
after-startup-command = []
# Start AeroSpace at login
start-at-login = true


# Notify Sketchybar about workspace change
exec-on-workspace-change = [
    '/bin/bash',
    '-c',
    '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]


# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide.html#normalization
enable-normalization-flatten-containers                         = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide.html#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide.html#assign-workspaces-to-monitors
gaps.inner.horizontal = 8
gaps.inner.vertical   = 8
gaps.outer.left       = 4
gaps.outer.bottom     = 4
gaps.outer.top        = 40
gaps.outer.right      = 4

# Visual indent makes it easier to understand that containers of the same orientation are nested.
# If you have 'enable-normalization-opposite-orientation-for-nested-containers' enabled then
# there is no way to observe the indent

# Layout of root containers of non-empty workspaces. The layout is applied only on startup
# Possible values: smart|tiles|accordion
# - 'tiles' and 'accordion' are self-describing
# - 'smart' means some "smart logic". Currently, 3 and less windows will get 'tiles' layout,
#   4 and more will get 'accordion' layout. 'smart' can change its behavior in future versions
non-empty-workspaces-root-containers-layout-on-startup = 'smart'

# layout floating
[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.weather'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.lencx.chatgpt'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'net.obins.obinslab-starter'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'cn.xfangfang.wiliwili'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.electron.yesplaymusic'
run       = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.cisco.secureclient.gui'
run       = 'layout floating'
# [[on-window-detected]]
# if.app-id = 'com.github.wez.wezterm'
# run = 'layout floating'

# layout tiling
[[on-window-detected]]
if.app-id = 'org.qutebrowser.qutebrowser'
run       = 'layout tiling'
[[on-window-detected]]
if.app-id = 'info.sioyek.sioyek'
run       = 'layout tiling'


[workspace-to-monitor-force-assignment]
1 = 'main'
2 = 'main'
3 = 'main'
4 = 'main'
5 = 'main'
# 6 = 'main'
# 7 = 'main'
# 8 = 'main'
# 9 = 'main'
A = 'secondary'
B = 'secondary'
C = 'secondary'
D = 'secondary'
E = 'secondary'
# F = 'secondary'
# G = 'secondary'
# H = 'secondary'
# I = 'secondary'
# J = 'secondary'
# K = 'secondary'
# L = 'secondary'
# M = 'secondary'
# N = 'secondary'
# O = 'secondary'
# P = 'secondary'
# Q = 'secondary'
# R = 'secondary'
# S = 'secondary'
# T = 'secondary'
# U = 'secondary'
# V = 'secondary'
# W = 'secondary'
# X = 'secondary'
# Y = 'secondary'
# Z = 'secondary'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands.html

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands.html#exec-and-forget
# alt-enter = ['exec-and-forget open -n /Applications/WezTerm.app']
# alt-enter = ['exec-and-forget set -e && open -n /Applications/WezTerm.app && sleep 1', 'layout floating']

# See: https://nikitabobko.github.io/AeroSpace/commands.html#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# Move focus around monitors
alt-m = 'focus-monitor --wrap-around next'


# Fullscreen
alt-f = 'fullscreen'

alt-shift-f = 'macos-native-fullscreen'

# Minimize
alt-shift-m = 'macos-native-minimize'

# Resize
alt-r = 'flatten-workspace-tree'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#move-through
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# floating toggle
alt-shift-space = 'layout floating tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#workspace
# alt-0 = 'workspace 0'
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
# alt-6 = 'workspace 6'
# alt-7 = 'workspace 7'
# alt-8 = 'workspace 8'
# alt-9 = 'workspace 9'
alt-a = 'workspace A'
alt-b = 'workspace B'
alt-c = 'workspace C'
alt-d = 'workspace D'
alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# alt-m = 'workspace M'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-s = 'workspace S'
# alt-t = 'workspace T'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
# alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#move-node-to-workspace
# move-node-toworkspace and switch to the workspace
# alt-shift-0 = ['move-node-to-workspace 0', 'workspace 0']
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
# alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
# alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
# alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
# alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
alt-shift-a = ['move-node-to-workspace A', 'workspace A']
alt-shift-b = ['move-node-to-workspace B', 'workspace B']
alt-shift-c = ['move-node-to-workspace C', 'workspace C']
alt-shift-d = ['move-node-to-workspace D', 'workspace D']
alt-shift-e = ['move-node-to-workspace E', 'workspace E']
# alt-shift-f = ['move-node-to-workspace F', 'workspace F']
# alt-shift-g = ['move-node-to-workspace G', 'workspace G']
# alt-shift-i = ['move-node-to-workspace I', 'workspace I']
# alt-shift-m = ['move-node-to-workspace M', 'workspace M']
# alt-shift-n = ['move-node-to-workspace N', 'workspace N']
# alt-shift-o = ['move-node-to-workspace O', 'workspace O']
# alt-shift-p = ['move-node-to-workspace P', 'workspace P']
# alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']
# alt-shift-r = ['move-node-to-workspace R', 'workspace R']
# alt-shift-s = ['move-node-to-workspace S', 'workspace S']
# alt-shift-t = ['move-node-to-workspace T', 'workspace T']
# alt-shift-u = ['move-node-to-workspace U', 'workspace U']
# alt-shift-v = ['move-node-to-workspace V', 'workspace V']
# alt-shift-w = ['move-node-to-workspace W', 'workspace W']
# alt-shift-x = ['move-node-to-workspace X', 'workspace X']
# alt-shift-y = ['move-node-to-workspace Y', 'workspace Y']
# alt-shift-z = ['move-node-to-workspace Z', 'workspace Z']

# See: https://nikitabobko.github.io/AeroSpace/commands.html#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'

alt-leftSquareBracket  = 'workspace --wrap-around prev'
alt-rightSquareBracket = 'workspace --wrap-around next'

alt-shift-leftSquareBracket = [
    'move-node-to-workspace --wrap-around prev',
    'workspace --wrap-around prev',
]
alt-shift-rightSquareBracket = [
    'move-node-to-workspace --wrap-around next',
    'workspace --wrap-around next',
]
# See: https://nikitabobko.github.io/AeroSpace/commands.html#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands.html#mode
alt-shift-semicolon = 'mode service'
alt-shift-slash     = 'mode join'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes
[mode.service.binding]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
esc = ['reload-config', 'mode main']

# 'join' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide.html#binding-modes
[mode.join.binding]
alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']
esc         = 'mode main'
